#Global configuration
spring.application.name=stock
#Tomcat configuration
server.port=9000
#Log level configuration
logging.level.root=error
logging.level.com.akouma=INFO
logging.level.org.springframework.boot.web.embedded.tomcat=INFO
spring.thymeleaf.encoding=UTF-8
#Database Configuration
#MYSQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:/akouma_stock
spring.datasource.username=root
spring.datasource.password=

#SESSION PARAMS
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
spring.session.timeout.seconds=600
#spring.thymeleaf.prefix=classpath:/templates
spring.thymeleaf.suffix=.html
spring.thymeleaf.enable=false
#PostgreSQL
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.username=postgres
#HIBERNATE MIGRATIONS
#spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
# Enable multipart uploads
spring.servlet.multipart.enabled=true
file.upload-dir=/Stock/uploads
spring.servlet.multipart.file-size-threshold=30MB
spring.servlet.multipart.max-file-size=30MB
# Max Request Size
spring.servlet.multipart.max-request-size=30MB

spring.messages.basename=validation

#Kafka configurations
spring.kafka.consumer.bootstrap-servers = localhost:9000
spring.kafka.consumer.group-id= id
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers = localhost:9000
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer